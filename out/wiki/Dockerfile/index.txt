1:"$Sreact.fragment"
2:I[94101,["598","static/chunks/598-c764b58cdaafc437.js","531","static/chunks/531-6b5d76a4980b3e05.js","185","static/chunks/app/layout-0b8e8313ea9847b9.js"],"default"]
3:I[93742,["598","static/chunks/598-c764b58cdaafc437.js","531","static/chunks/531-6b5d76a4980b3e05.js","185","static/chunks/app/layout-0b8e8313ea9847b9.js"],"default"]
4:I[97960,[],""]
5:I[5625,[],""]
6:I[69946,["598","static/chunks/598-c764b58cdaafc437.js","531","static/chunks/531-6b5d76a4980b3e05.js","185","static/chunks/app/layout-0b8e8313ea9847b9.js"],"default"]
8:I[58165,[],"OutletBoundary"]
a:I[58165,[],"MetadataBoundary"]
c:I[58165,[],"ViewportBoundary"]
e:I[90810,[],""]
0:{"P":null,"b":"sTtUraSYhyLtDhNiRnz_4","p":"","c":["","wiki","Dockerfile",""],"i":false,"f":[[["",{"children":["wiki",{"children":[["slug","Dockerfile","d"],{"children":["__PAGE__?{\"slug\":\"Dockerfile\"}",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[null,["$","html",null,{"lang":"ko","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","div",null,{"style":{"minHeight":"100vh","display":"flex","flexDirection":"column"},"children":[["$","$L3",null,{}],["$","main",null,{"style":{"flex":1},"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"children":[["$","h2",null,{"children":"404 - Page Not Found"}],["$","p",null,{"children":"The page you are looking for does not exist."}]]}],"notFoundStyles":[]}]}],["$","$L6",null,{}]]}]}]}]}]]}],{"children":["wiki",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","wiki","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["slug","Dockerfile","d"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","wiki","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",null,["$","$L8",null,{"children":"$L9"}]]}],{},null]},null]},null]},null],["$","$1","h",{"children":[null,["$","$1","auCoO3f9flUXCJCOJt4fF",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],null]}]]}]]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[74727,["598","static/chunks/598-c764b58cdaafc437.js","444","static/chunks/444-f744f25a4ea97e0f.js","607","static/chunks/app/wiki/%5Bslug%5D/page-2d16be239064e07b.js"],"WikiContent"]
11:I[85578,["598","static/chunks/598-c764b58cdaafc437.js","444","static/chunks/444-f744f25a4ea97e0f.js","607","static/chunks/app/wiki/%5Bslug%5D/page-2d16be239064e07b.js"],"Comments"]
10:T775,* TOC
{:toc}

# Dockerfile 설정방법
## Dockerfile을 습득하기 앞서 필요한 내용
- 기본적인 shell command
- Docker의 기본적인 구조 및 사용방법(image, container)


 
## 매커니즘
- 폴더를 생성 후 Dockerfile 을 만든 후에 스크립트를 넣으면 안에 있는 모든 파일을 읽으며 docker image파일이 생성된다.

## 스크립트 명령어
- FROM : 베이스가 될 도커 이미지 <이미지 이름>:<태그> 
- MAINTAINER : 작성자 정보
- CMD : Shell Script 를 실행할 수 있다.
- LABEL : 라벨 작성 (docker inspect 명령으로 label을 확인 가능) 
- EXPOSE : 호스트와 연결할 포트 번호를 설정한다.(도커내부로만 가능 외부는 portforwarding 해줘야함)
- ENV : 환경변수 설정
- ADD : 파일 / 디렉터리 추가
- COPY : 파일 복사
- ENTRYPOINT : 컨테이너가 시작되었을때만 스크립트 실행
- VOLUME : 볼륨을 마운트 (내컴퓨터에 스토리지를 연결)
- USER : 명령 실행할 사용자 권한 지정
- WORKDIR : "RUN", "CMD", "ENTRYPOINT" 명령이 실행될 작업 디렉토리
- ARG : Dockerfile 내부 변수
- ONBUILD : 다른 이미지의Base Image로 이는 경우에 실행될 명령 수행
- SHELL : default shell 지정


## 기본 Dockerfile 스크립트
```Dockerfile
FROM ubuntu:20.1
//도커이미지 우분투20.1을 사용(local에 해당 이미지가 없으면 자동다운 )

RUN apt-get update && apt-get install -y vim apache2
// shell script명령어로 초기 apt update후 vim 과 apache를 설치

COPY index.html /var/www/html/
//Dockerfile에 같이 있는 index.html 파일을 apache  root 폴더인/var/www/html/ 에 넣는다

CMD ["/usr/sbin/apachectl", "-D", "FOREGROUND"]
//shell script명령어로 apache 실행 명령어 옵션에 -D를 넣고 실행
```

## reference
- [참고사이트](https://blog.d0ngd0nge.xyz/docker-dockerfile-write)

7:["$","main",null,{"children":["$","article",null,{"children":[["$","$Lf",null,{"content":"$10","frontMatter":{"title":"Dockerfile 설정방법","description":"$undefined","tags":["Docker","Dockerfile","스크립트","이미지","컨테이너"],"date":"2022-05-01 16:12:38 +0900"}}],["$","$L11",null,{"slug":"Dockerfile"}]]}]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Personal Storage"}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
9:null
