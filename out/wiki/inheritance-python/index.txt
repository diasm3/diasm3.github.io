1:"$Sreact.fragment"
2:I[4101,["598","static/chunks/598-b69b240bf426274b.js","531","static/chunks/531-a6f513f60d7f2ed6.js","185","static/chunks/app/layout-1a9ce41322de5295.js"],"default"]
3:I[3742,["598","static/chunks/598-b69b240bf426274b.js","531","static/chunks/531-a6f513f60d7f2ed6.js","185","static/chunks/app/layout-1a9ce41322de5295.js"],"default"]
4:I[7960,[],""]
5:I[5625,[],""]
6:I[9946,["598","static/chunks/598-b69b240bf426274b.js","531","static/chunks/531-a6f513f60d7f2ed6.js","185","static/chunks/app/layout-1a9ce41322de5295.js"],"default"]
8:I[8165,[],"OutletBoundary"]
a:I[8165,[],"MetadataBoundary"]
c:I[8165,[],"ViewportBoundary"]
e:I[810,[],""]
0:{"P":null,"b":"1gBIa67YwYncMlz2nwFiK","p":"","c":["","wiki","inheritance-python",""],"i":false,"f":[[["",{"children":["wiki",{"children":[["slug","inheritance-python","d"],{"children":["__PAGE__?{\"slug\":\"inheritance-python\"}",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[null,["$","html",null,{"lang":"ko","children":["$","body",null,{"children":["$","$L2",null,{"children":["$","div",null,{"style":{"minHeight":"100vh","display":"flex","flexDirection":"column"},"children":[["$","$L3",null,{}],["$","main",null,{"style":{"flex":1},"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"children":[["$","h2",null,{"children":"404 - Page Not Found"}],["$","p",null,{"children":"The page you are looking for does not exist."}]]}],"notFoundStyles":[]}]}],["$","$L6",null,{}]]}]}]}]}]]}],{"children":["wiki",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","wiki","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["slug","inheritance-python","d"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","wiki","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",null,["$","$L8",null,{"children":"$L9"}]]}],{},null]},null]},null]},null],["$","$1","h",{"children":[null,["$","$1","ybMqy1Jj2EVV_lCCVW43_",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],null]}]]}]]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:I[4023,["598","static/chunks/598-b69b240bf426274b.js","848","static/chunks/848-a557251920a40253.js","607","static/chunks/app/wiki/%5Bslug%5D/page-3bb981cd3ee1ea46.js"],"WikiContent"]
10:T80f,* TOC
{:toc}

# 상속 inheritance 
## 각자 만든 method를 한곳에 사용 하고싶다. 

> 2022-03-26 15:33:03 
토요일 
팀원들과 vscode live share를 하고 같이 스택에 대해서 같이 코딩을 해보았다 .
그런데 아래와 같은 문제가 발생했다.

1. 각자 파일을 만들고 메소드를 만들었다. push pop randompop
2. __main__파일로 import 해서 method를 불러왔다. 
3. __main__이라는 파일에서 Node 객체들 만들고 각자 만들었던 method를 가져와 상속시켰지만 `작동하지` 않았다 

> 상속이 왜 안될까?


```python
# __main__.py 파일
from smhong import Stack, Node

from sunghye import * 
from semyung import * 
from ksj import * 

class Stack_(Semyung, stack_ksj, Sunghye, Stack):
     def __init__(self):
         self.max = 10
         self.size = 0
         self.top = None

     def __str__(self):
         ss = []
         while top:
             ss.append(top.item)
            top = top.next
      
         return str(ss)
 a = Stack_()

 a.push(1)
 a.pop()
 a.push(1)
 print(a)
```


## 변수가 공유가 안된다 

1. 각자 만든 메소드를 한 파일에 


```python
#  __main__.py 

# semyung 파일에서 모든 클라스를 가져온다
# ksj 파일에서 모든 클라스를 가져온다
from semyung import *
from ksj import *



# 아래와 같이 두가지 파일을 만들고 

# semyung.py
## push method

def push(self, value):
    if self.head is not None:
        self.head =  Node(value)
        
    self.temp = self.head.next
    self.head.next = Node(value)
    self.head = self.temp
    
    
# ksj.py
## pop, randompop method

def pop(self):
    if self.top is not None:
        node = self.top
        self.top = self.top.next
        self.size -= 1
        return node.item

def randompop(self):
    ran = randrange(1, self.size)
    node = self.top

    for _ in range(ran-1):
        if not node:
            return None
        node = node.next
    result = node.next

    node.next = node.next.next    
    return result.item

````
7:["$","$Lf",null,{"content":"$10","frontMatter":{"title":"상속 inheritance","description":"$undefined","tags":["상속","코딩문제","파이썬","팀협업","메서드공유"],"date":"2022-03-27 17:41:32 +0900"}}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Your Blog Title"}],["$","meta","2",{"name":"description","content":"Your blog description"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
9:null
