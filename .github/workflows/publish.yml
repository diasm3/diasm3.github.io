name: publish-to-github-pages
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    # PR이 머지되었을 때만 실행
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 # 전체 히스토리 가져오기

      # 기존 빌드 파일 정리
      - name: Clean previous build
        run: |
          echo "🧹 Cleaning previous build files..."
          rm -rf out/
          rm -rf .next/
          git clean -fdx
          echo "✅ Cleanup completed"

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Create data directory
        run: |
          mkdir -p data
          echo "📂 Created fresh data directory"

      # 새로운 빌드 수행
      - name: Build with Next.js 🏗️
        run: |
          echo "🚀 Starting fresh build..."
          pnpm build:data
          pnpm build
          echo "✅ Build completed"

      - name: Create required files
        run: |
          echo "📄 Adding required files..."
          touch out/.nojekyll
          cp out/404.html out/404 || true
          cp out/index.html out/index || true
          cp public/robots.txt out/ || true
          cp public/sitemap*.xml out/ || true
          cp public/naver*.html out/ || true
          cp public/google*.html out/ || true
          cp public/rss.xml out/ || true

      # 빌드 결과 확인
      - name: Verify build output
        run: |
          echo "📂 New build contents:"
          ls -la out/
          echo "\n📦 Build size:"
          du -sh out/

      # main 브랜치 업데이트
      - name: Update main branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # 기존의 out 디렉토리 제거
          git rm -rf out/ || true
          git commit -m "Remove old build files" || echo "No files to remove"

          # 새로운 빌드 파일 추가
          git add out/ -f
          git commit -m "Update build files [skip ci]" || echo "No changes to commit"
          git push origin main

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
